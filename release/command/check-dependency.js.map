{"version":3,"sources":["../../source/command/check-dependency.js"],"names":["createRequire","CreateRequire","Command","FileSystem","Is","JSON5","Path","Check","Process","process","Require","import","meta","url","Package","parse","readFileSync","resolve","version","option","action","path","projectPath","configuration","pathExists","configurationPath","readFile","dependency","exitCode","not","emptyObject","missing","reportMissing","missingDependency","Object","entries","sort","leftDependency","rightDependency","localeCompare","console","log","repeat","forEach","map","relative","join","unused","length","reportUnused","used","reportUsed","usedDependency","error","argv"],"mappings":"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","sourcesContent":["#!/usr/bin/env node\n\nimport '@virtualpatterns/mablung-source-map-support/install'\nimport { createRequire as CreateRequire } from 'module'\nimport Command from 'commander'\nimport FileSystem from 'fs-extra'\nimport Is from '@pwn/is'\nimport JSON5 from 'json5'\nimport Path from 'path'\n\nimport { Check } from '../library/check.js'\n\nconst Process = process\nconst Require = CreateRequire(import.meta.url)\n\nconst Package = JSON5.parse(FileSystem.readFileSync(Require.resolve('../../package.json')), { 'encoding': 'utf-8' })\n\nCommand\n  .version(Package.version)\n  .option('--project-path <path>', 'Path of the project to check', '.') // Process.cwd())\n  .option('--configuration-path <path>', 'Path of the configuration file, if it exists', './check-dependency.json')\n  .option('--report-missing', 'Report missing dependencies', true)\n  .option('--no-report-missing', 'Do not report missing dependencies')\n  .option('--report-unused', 'Report used dependencies', true)\n  .option('--no-report-unused', 'Do not report used dependencies')\n  .option('--report-used', 'Report used dependencies', false)\n  .action(async (option) => {\n\n    try {\n\n      let path = option.projectPath\n      let configuration = null\n\n      if (await FileSystem.pathExists(option.configurationPath)) {\n        configuration = JSON5.parse(await FileSystem.readFile(option.configurationPath, { 'encoding': 'utf-8' }))\n      } else {\n        configuration = {}\n      }\n\n      let dependency = await Check(path, configuration)\n      process.exitCode = 0\n\n      if (Is.not.emptyObject(dependency.missing) &&\n          option.reportMissing) {\n\n        let missingDependency = null\n        missingDependency = Object.entries(dependency.missing)\n        missingDependency = missingDependency.sort(([leftDependency], [rightDependency]) => leftDependency.localeCompare(rightDependency))\n\n        console.log('-'.repeat(80))\n        console.log('Missing dependencies')\n        console.log('-'.repeat(80))\n\n        missingDependency.forEach(([dependency, path]) => {\n          console.log(`${dependency} used in ...`)\n          console.log(path.sort().map((path) => `  ${Path.relative('', path)}`).join('\\n'))\n        })\n\n        console.log()\n\n        process.exitCode = 1\n\n      }\n      \n      if (dependency.unused.length > 0 &&\n          option.reportUnused) {\n\n        console.log('-'.repeat(80))\n        console.log('Unused dependencies')\n        console.log('-'.repeat(80))\n        console.log(dependency.unused.sort().map((dependency) => `${dependency}`).join('\\n'))\n        console.log()\n\n        process.exitCode = 1\n\n      }\n\n      if (Is.not.emptyObject(dependency.used) &&\n          option.reportUsed) {\n\n        let usedDependency = null\n        usedDependency = Object.entries(dependency.used)\n        usedDependency = usedDependency.sort(([leftDependency], [rightDependency]) => leftDependency.localeCompare(rightDependency))\n    \n        console.log('-'.repeat(80))\n        console.log('Used dependencies')\n        console.log('-'.repeat(80))\n\n        usedDependency.forEach(([dependency, path]) => {\n          console.log(`${dependency} used in ...`)\n          console.log(path.sort().map((path) => `  ${Path.relative('', path)}`).join('\\n'))\n        })\n\n        console.log()\n\n      }\n\n      // if (process.exitCode === 0) {\n        \n      //   console.log('-'.repeat(80))\n      //   console.log('There are no dependency issues.')\n      //   console.log('-'.repeat(80))\n\n      // }\n      \n    } catch (error) {\n      console.error(error)\n      process.exitCode = 2\n    }\n\n  })\n\nCommand.parse(Process.argv)\n"],"file":"check-dependency.js"}