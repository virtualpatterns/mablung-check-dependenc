{"version":3,"sources":["../../../source/test/library/check-parcel.test.js"],"names":["Path","Test","URL","Check","FilePath","fileURLToPath","import","meta","url","FolderPath","dirname","ResourcePath","normalize","test","deepEqual"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,IAAP,MAAiB,KAAjB;AACA,OAAOC,GAAP,MAAgB,KAAhB;;AAEA,SAASC,KAAT,QAAsB,gBAAtB;;AAEA,MAAMC,QAAQ,GAAGF,GAAG,CAACG,aAAJ,CAAkBC,MAAM,CAACC,IAAP,CAAYC,GAA9B,CAAjB;AACA,MAAMC,UAAU,GAAGT,IAAI,CAACU,OAAL,CAAaN,QAAb,CAAnB;;AAEA,MAAMO,YAAY,GAAGX,IAAI,CAACY,SAAL,CAAgB,GAAEH,UAAW,kBAA7B,CAArB;;AAEAR,IAAI,CAAC,kCAAD,EAAqC,OAAOY,IAAP,KAAgB;AACvDA,EAAAA,IAAI,CAACC,SAAL,CAAe,MAAMX,KAAK,CAAE,GAAEQ,YAAa,oBAAjB,EAAsC,EAAtC,CAA1B,EAAqE;AACnE,eAAW,EADwD;AAEnE,cAAU;AACR,oBADQ,CAFyD;;AAKnE,YAAQ,EAL2D,EAArE;;AAOD,CARG,CAAJ;;AAUAV,IAAI,CAAC,+BAAD,EAAkC,OAAOY,IAAP,KAAgB;AACpDA,EAAAA,IAAI,CAACC,SAAL,CAAe,MAAMX,KAAK,CAAE,GAAEQ,YAAa,iBAAjB,EAAmC,EAAnC,CAA1B,EAAkE;AAChE,eAAW,EADqD;AAEhE,cAAU;AACR,oBADQ,CAFsD;;AAKhE,YAAQ;AACN,oDAA8C,CAAG,GAAEA,YAAa,8BAAlB,CADxC,EALwD,EAAlE;;;AASD,CAVG,CAAJ;;AAYAV,IAAI,CAAC,2BAAD,EAA8B,OAAOY,IAAP,KAAgB;AAChDA,EAAAA,IAAI,CAACC,SAAL,CAAe,MAAMX,KAAK,CAAE,GAAEQ,YAAa,aAAjB,EAA+B,EAA/B,CAA1B,EAA8D;AAC5D,eAAW,EADiD;AAE5D,cAAU,EAFkD;AAG5D,YAAQ,EAHoD,EAA9D;;AAKD,CANG,CAAJ;;AAQAV,IAAI,CAAC,kCAAD,EAAqC,OAAOY,IAAP,KAAgB;AACvDA,EAAAA,IAAI,CAACC,SAAL,CAAe,MAAMX,KAAK,CAAE,GAAEQ,YAAa,oBAAjB,EAAsC,EAAtC,CAA1B,EAAqE;AACnE,eAAW,EADwD;AAEnE,cAAU;AACR,gDADQ,CAFyD;;AAKnE,YAAQ,EAL2D,EAArE;;AAOD,CARG,CAAJ;;AAUAV,IAAI,CAAC,8BAAD,EAAiC,OAAOY,IAAP,KAAgB;AACnDA,EAAAA,IAAI,CAACC,SAAL,CAAe,MAAMX,KAAK,CAAE,GAAEQ,YAAa,gBAAjB,EAAkC,EAAlC,CAA1B,EAAiE;AAC/D,eAAW,EADoD;AAE/D,cAAU,EAFqD;AAG/D,YAAQ,EAHuD,EAAjE;;AAKD,CANG,CAAJ","sourcesContent":["import Path from 'path'\nimport Test from 'ava'\nimport URL from 'url'\n\nimport { Check } from '../../index.js'\n\nconst FilePath = URL.fileURLToPath(import.meta.url)\nconst FolderPath = Path.dirname(FilePath)\n\nconst ResourcePath = Path.normalize(`${FolderPath}/resource/parcel`)\n\nTest('Check(\\'bundler-no-plugin\\', {})', async (test) => {\n  test.deepEqual(await Check(`${ResourcePath}/bundler-no-plugin`, {}), { \n    'missing': {}, \n    'unused': [\n      'parcel-bundler'\n    ],\n    'used': {}\n  })\n})\n\nTest('Check(\\'bundler-plugin\\', {})', async (test) => {\n  test.deepEqual(await Check(`${ResourcePath}/bundler-plugin`, {}), { \n    'missing': {}, \n    'unused': [\n      'parcel-bundler'\n    ],\n    'used': {\n      '@virtualpatterns/parcel-plugin-virtual-pug': [ `${ResourcePath}/bundler-plugin/package.json` ]\n    }\n  })\n})\n\nTest('Check(\\'no-bundler\\', {})', async (test) => {\n  test.deepEqual(await Check(`${ResourcePath}/no-bundler`, {}), { \n    'missing': {}, \n    'unused': [],  \n    'used': {}\n  })  \n})  \n\nTest('Check(\\'no-bundler-plugin\\', {})', async (test) => {\n  test.deepEqual(await Check(`${ResourcePath}/no-bundler-plugin`, {}), { \n    'missing': {}, \n    'unused': [\n      '@virtualpatterns/parcel-plugin-virtual-pug'\n    ],\n    'used': {}\n  })\n})\n\nTest('Check(\\'no-dependency\\', {})', async (test) => {\n  test.deepEqual(await Check(`${ResourcePath}/no-dependency`, {}), { \n    'missing': {}, \n    'unused': [],\n    'used': {}\n  })  \n})  \n"],"file":"check-parcel.test.js"}