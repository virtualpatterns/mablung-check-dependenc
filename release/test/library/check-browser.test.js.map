{"version":3,"sources":["../../../source/test/library/check-browser.test.js"],"names":["Path","Test","URL","Check","FilePath","fileURLToPath","import","meta","url","FolderPath","dirname","ResourcePath","normalize","test","deepEqual"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,IAAP,MAAiB,KAAjB;AACA,OAAOC,GAAP,MAAgB,KAAhB;;AAEA,SAASC,KAAT,QAAsB,gBAAtB;;AAEA,MAAMC,QAAQ,GAAGF,GAAG,CAACG,aAAJ,CAAkBC,MAAM,CAACC,IAAP,CAAYC,GAA9B,CAAjB;AACA,MAAMC,UAAU,GAAGT,IAAI,CAACU,OAAL,CAAaN,QAAb,CAAnB;;AAEA,MAAMO,YAAY,GAAGX,IAAI,CAACY,SAAL,CAAgB,GAAEH,UAAW,mBAA7B,CAArB;;AAEAR,IAAI,CAAC,wBAAD,EAA2B,MAAOY,IAAP,IAAgB;AAC7CA,EAAAA,IAAI,CAACC,SAAL,CAAe,MAAMX,KAAK,CAAE,GAAEQ,YAAa,UAAjB,EAA4B,EAA5B,CAA1B,EAA2D;AACzD,eAAW;AACT,2BAAqB,CAAG,GAAEA,YAAa,uBAAlB,CADZ,EAD8C;;AAIzD,cAAU,EAJ+C;AAKzD,YAAQ;AACN,2BAAqB,CAAG,GAAEA,YAAa,uBAAlB,CADf,EALiD,EAA3D;;;AASD,CAVG,CAAJ;;AAYAV,IAAI,CAAC,2BAAD,EAA8B,MAAOY,IAAP,IAAgB;AAChDA,EAAAA,IAAI,CAACC,SAAL,CAAe,MAAMX,KAAK,CAAE,GAAEQ,YAAa,aAAjB,EAA+B,EAA/B,CAA1B,EAA8D;AAC5D,eAAW,EADiD;AAE5D,cAAU;AACR;AACA;AACA,uBAHQ;AAIR,UAJQ,CAFkD;;AAQ5D,YAAQ,EARoD,EAA9D;;AAUD,CAXG,CAAJ;;AAaAV,IAAI,CAAC,uBAAD,EAA0B,MAAOY,IAAP,IAAgB;AAC5CA,EAAAA,IAAI,CAACC,SAAL,CAAe,MAAMX,KAAK,CAAE,GAAEQ,YAAa,SAAjB,EAA2B,EAA3B,CAA1B,EAA0D;AACxD,eAAW,EAD6C;AAExD,cAAU;AACR;AACA;AACA,uBAHQ;AAIR,UAJQ,CAF8C;;AAQxD,YAAQ,EARgD,EAA1D;;AAUD,CAXG,CAAJ;;AAaAV,IAAI,CAAC,qBAAD,EAAwB,MAAOY,IAAP,IAAgB;AAC1CA,EAAAA,IAAI,CAACC,SAAL,CAAe,MAAMX,KAAK,CAAE,GAAEQ,YAAa,OAAjB,EAAyB,EAAzB,CAA1B,EAAwD;AACtD,eAAW,EAD2C;AAEtD,cAAU;AACR;AACA;AACA,UAHQ,CAF4C;;AAOtD,YAAQ;AACN,2BAAqB,CAAG,GAAEA,YAAa,oBAAlB,CADf,EAP8C,EAAxD;;;AAWD,CAZG,CAAJ","sourcesContent":["import Path from 'path'\nimport Test from 'ava'\nimport URL from 'url'\n\nimport { Check } from '../../index.js'\n\nconst FilePath = URL.fileURLToPath(import.meta.url)\nconst FolderPath = Path.dirname(FilePath)\n\nconst ResourcePath = Path.normalize(`${FolderPath}/resource/browser`)\n\nTest('Check(\\'missing\\', {})', async (test) => {\n  test.deepEqual(await Check(`${ResourcePath}/missing`, {}), { \n    'missing': {\n      'stream-browserify': [ `${ResourcePath}/missing/package.json` ]\n    }, \n    'unused': [],\n    'used': {\n      'stream-browserify': [ `${ResourcePath}/missing/package.json` ]\n    }\n  })\n})\n\nTest('Check(\\'no-browser\\', {})', async (test) => {\n  test.deepEqual(await Check(`${ResourcePath}/no-browser`, {}), { \n    'missing': {}, \n    'unused': [\n      // the packages buffer, events, util (maybe more)\n      // are ignored by depcheck even if returned by the browser.js parser\n      'stream-browserify',\n      'util'\n    ],\n    'used': {}\n  })\n})\n\nTest('Check(\\'unused\\', {})', async (test) => {\n  test.deepEqual(await Check(`${ResourcePath}/unused`, {}), { \n    'missing': {}, \n    'unused': [\n      // the packages buffer, events, util (maybe more)\n      // are ignored by depcheck even if returned by the browser.js parser\n      'stream-browserify',\n      'util'\n    ],\n    'used': {}\n  })\n})\n\nTest('Check(\\'used\\', {})', async (test) => {\n  test.deepEqual(await Check(`${ResourcePath}/used`, {}), { \n    'missing': {}, \n    'unused': [\n      // the packages buffer, events, util (maybe more)\n      // are ignored by depcheck even if returned by the browser.js parser\n      'util'\n    ],\n    'used': {\n      'stream-browserify': [ `${ResourcePath}/used/package.json` ]\n    }\n  })\n})\n"],"file":"check-browser.test.js"}