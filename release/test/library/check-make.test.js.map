{"version":3,"sources":["../../../source/test/library/check-make.test.js"],"names":[],"mappings":"AAAA,OAAO,IAAP,MAAiB,MAAjB;AACA,OAAO,IAAP,MAAiB,KAAjB;AACA,OAAO,GAAP,MAAgB,KAAhB;;AAEA,SAAS,KAAT,QAAsB,gBAAtB;;AAEA,MAAM,QAAQ,GAAG,GAAG,CAAC,aAAJ,CAAkB,MAAM,CAAC,IAAP,CAAY,GAA9B,CAAjB;AACA,MAAM,UAAU,GAAG,IAAI,CAAC,OAAL,CAAa,QAAb,CAAnB;AACA,MAAM,OAAO,GAAG,OAAhB;;AAEA,MAAM,YAAY,GAAG,IAAI,CAAC,SAAL,CAAgB,GAAE,UAAW,gBAA7B,CAArB;;AAEA,IAAI,CAAC,MAAL,CAAY,wBAAZ,EAAsC,OAAO,IAAP,KAAgB;AACpD,EAAA,OAAO,CAAC,GAAR,CAAY,eAAZ,IAAgC,GAAE,YAAa,mBAA/C;AACA,EAAA,IAAI,CAAC,SAAL,CAAe,MAAM,KAAK,CAAE,GAAE,YAAa,UAAjB,EAA4B,EAA5B,CAA1B,EAA2D;AACzD,eAAW,EAD8C;AAEzD,cAAU,EAF+C;AAGzD,YAAQ,EAHiD,EAA3D;;AAKD,CAPD;;AASA,IAAI,CAAC,MAAL,CAAY,uBAAZ,EAAqC,OAAO,IAAP,KAAgB;AACnD,EAAA,OAAO,CAAC,GAAR,CAAY,eAAZ,IAAgC,GAAE,YAAa,kBAA/C;AACA,EAAA,IAAI,CAAC,SAAL,CAAe,MAAM,KAAK,CAAE,GAAE,YAAa,SAAjB,EAA2B,EAA3B,CAA1B,EAA0D;AACxD,eAAW,EAD6C;AAExD,cAAU;AACR,SADQ,CAF8C;;AAKxD,YAAQ,EALgD,EAA1D;;AAOD,CATD;;AAWA,IAAI,CAAC,MAAL,CAAY,6BAAZ,EAA2C,OAAO,IAAP,KAAgB;AACzD,EAAA,OAAO,CAAC,GAAR,CAAY,eAAZ,IAAgC,GAAE,YAAa,wBAA/C;AACA,EAAA,IAAI,CAAC,SAAL,CAAe,MAAM,KAAK,CAAE,GAAE,YAAa,eAAjB,EAAiC,EAAjC,CAA1B,EAAgE;AAC9D,eAAW,EADmD;AAE9D,cAAU,EAFoD;AAG9D,YAAQ;AACN,aAAO,CAAE,GAAE,YAAa,wBAAjB,CADD;AAEN,aAAO,CAAE,GAAE,YAAa,wBAAjB,CAFD;AAGN,aAAO,CAAE,GAAE,YAAa,wBAAjB,CAHD;AAIN,aAAO,CAAE,GAAE,YAAa,wBAAjB,CAJD;AAKN,aAAO,CAAE,GAAE,YAAa,wBAAjB,CALD;AAMN,aAAO,CAAE,GAAE,YAAa,wBAAjB,CAND;AAON,aAAO,CAAE,GAAE,YAAa,wBAAjB,CAPD;AAQN,aAAO,CAAE,GAAE,YAAa,wBAAjB,CARD;AASN,aAAO,CAAE,GAAE,YAAa,wBAAjB,CATD;AAUN,aAAO,CAAE,GAAE,YAAa,wBAAjB,CAVD;AAWN,aAAO,CAAE,GAAE,YAAa,wBAAjB,CAXD;AAYN,aAAO,CAAE,GAAE,YAAa,wBAAjB,CAZD,EAHsD,EAAhE;;;AAkBD,CApBD;;AAsBA,IAAI,CAAC,MAAL,CAAY,6BAAZ,EAA2C,OAAO,IAAP,KAAgB;AACzD,EAAA,OAAO,CAAC,GAAR,CAAY,eAAZ,IAAgC,GAAE,YAAa,0BAAyB,YAAa,yCAArF;AACA,EAAA,IAAI,CAAC,SAAL,CAAe,MAAM,KAAK,CAAE,GAAE,YAAa,eAAjB,EAAiC,EAAjC,CAA1B,EAAgE;AAC9D,eAAW,EADmD;AAE9D,cAAU,EAFoD;AAG9D,YAAQ;AACN,aAAO;AACJ,SAAE,YAAa,wBADX,CADD,EAHsD,EAAhE;;;;AASD,CAXD","file":"check-make.test.js","sourcesContent":["import Path from 'path'\nimport Test from 'ava'\nimport URL from 'url'\n\nimport { Check } from '../../index.js'\n\nconst FilePath = URL.fileURLToPath(import.meta.url)\nconst FolderPath = Path.dirname(FilePath)\nconst Process = process\n\nconst ResourcePath = Path.normalize(`${FolderPath}/resource/make`)\n\nTest.serial('Check(\\'missing\\', {})', async (test) => {\n  Process.env['MAKEFILE_PATH'] = `${ResourcePath}/missing/makefile`\n  test.deepEqual(await Check(`${ResourcePath}/missing`, {}), {\n    'missing': {},\n    'unused': [],\n    'used': {}\n  })\n})\n\nTest.serial('Check(\\'unused\\', {})', async (test) => {\n  Process.env['MAKEFILE_PATH'] = `${ResourcePath}/unused/makefile`\n  test.deepEqual(await Check(`${ResourcePath}/unused`, {}), {\n    'missing': {},\n    'unused': [\n      'shx'\n    ],\n    'used': {}\n  })\n})\n\nTest.serial('Check(\\'used/default\\', {})', async (test) => {\n  Process.env['MAKEFILE_PATH'] = `${ResourcePath}/used/default/makefile`\n  test.deepEqual(await Check(`${ResourcePath}/used/default`, {}), {\n    'missing': {},\n    'unused': [],\n    'used': {\n      'abc': [`${ResourcePath}/used/default/makefile`],\n      'bcd': [`${ResourcePath}/used/default/makefile`],\n      'cde': [`${ResourcePath}/used/default/makefile`],\n      'def': [`${ResourcePath}/used/default/makefile`],\n      'efg': [`${ResourcePath}/used/default/makefile`],\n      'fgh': [`${ResourcePath}/used/default/makefile`],\n      'ghi': [`${ResourcePath}/used/default/makefile`],\n      'hij': [`${ResourcePath}/used/default/makefile`],\n      'ijk': [`${ResourcePath}/used/default/makefile`],\n      'jkl': [`${ResourcePath}/used/default/makefile`],\n      'klm': [`${ResourcePath}/used/default/makefile`],\n      'lmn': [`${ResourcePath}/used/default/makefile`]\n    }\n  })\n})\n\nTest.serial('Check(\\'used/include\\', {})', async (test) => {\n  Process.env['MAKEFILE_PATH'] = `${ResourcePath}/used/include/makefile ${ResourcePath}/used/include/node_modules/shx/makefile`\n  test.deepEqual(await Check(`${ResourcePath}/used/include`, {}), {\n    'missing': {},\n    'unused': [],\n    'used': {\n      'shx': [\n        `${ResourcePath}/used/include/makefile`\n      ]\n    }\n  })\n})\n"]}