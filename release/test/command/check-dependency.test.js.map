{"version":3,"sources":["../../../source/test/command/check-dependency.test.js"],"names":["Path","Test","URL","CheckDependencyProcess","FilePath","fileURLToPath","import","meta","url","FolderPath","dirname","ResourcePath","normalize","only","test","process","is","whenExit"],"mappings":"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","sourcesContent":["import Path from 'path'\nimport Test from 'ava'\nimport URL from 'url'\n\nimport { CheckDependencyProcess } from './check-dependency-process.js'\n\nconst FilePath = URL.fileURLToPath(import.meta.url)\nconst FolderPath = Path.dirname(FilePath)\n\n// the resources in distributable are used because \n// and these tests don't rely on babel to copy \n// dot files (e.g. .babelrc.json)\nconst ResourcePath = Path.normalize(`${FolderPath}/resource`)\n\nTest.only('check-dependency', async (test) => {\n  let process = new CheckDependencyProcess()\n  test.is(await process.whenExit(), 0)\n})\n\nTest('check-dependency --help', async (test) => {\n  let process = new CheckDependencyProcess({ '--help': true })\n  test.is(await process.whenExit(), 0)\n})\n\nTest('check-dependency --project-path no-issue', async (test) => {\n  let process = new CheckDependencyProcess({ '--project-path': `${ResourcePath}/no-issue` })\n  test.is(await process.whenExit(), 0)\n})\n\nTest('check-dependency --project-path unused', async (test) => {\n  let process = new CheckDependencyProcess({ '--project-path': `${ResourcePath}/unused` })\n  test.is(await process.whenExit(), 1)\n})\n\nTest('check-dependency --project-path unused --configuration-path unused/configuration.json', async (test) => {\n  let process = new CheckDependencyProcess({ '--project-path': `${ResourcePath}/unused`, '--configuration-path': `${ResourcePath}/unused/configuration.json` })\n  test.is(await process.whenExit(), 0)\n})\n\nTest('check-dependency --project-path missing --report-missing', async (test) => {\n  let process = new CheckDependencyProcess({ '--project-path': `${ResourcePath}/missing`, '--report-missing': true })\n  test.is(await process.whenExit(), 1)\n})\n\nTest('check-dependency --project-path missing --no-report-missing', async (test) => {\n  let process = new CheckDependencyProcess({ '--project-path': `${ResourcePath}/missing`, '--no-report-missing': true })\n  test.is(await process.whenExit(), 0)\n})\n\nTest('check-dependency --project-path unused --report-unused', async (test) => {\n  let process = new CheckDependencyProcess({ '--project-path': `${ResourcePath}/unused`, '--report-unused': true })\n  test.is(await process.whenExit(), 1)\n})\n\nTest('check-dependency --project-path unused --no-report-unused', async (test) => {\n  let process = new CheckDependencyProcess({ '--project-path': `${ResourcePath}/unused`, '--no-report-unused': true })\n  test.is(await process.whenExit(), 0)\n})\n\nTest('check-dependency --project-path no-issue --report-used', async (test) => {\n  let process = new CheckDependencyProcess({ '--project-path': `${ResourcePath}/no-issue`, '--report-used': true })\n  test.is(await process.whenExit(), 0)\n})\n\nTest('check-dependency --project-path error', async (test) => {\n  let process = new CheckDependencyProcess({ '--project-path': `${ResourcePath}/error` })\n  test.is(await process.whenExit(), 2)\n})\n"],"file":"check-dependency.test.js"}