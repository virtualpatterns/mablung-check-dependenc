{"version":3,"sources":["../../../source/library/special/ava.js"],"names":["FileSystem","JSON5","Match","Path","Query","GetDependencyName","Ava","filePath","fileDependency","fileName","basename","pattern","reduce","isMatch","configuration","parse","readFile","ava","require","query","map","dependency"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,UAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,WAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,SAASC,iBAAT,QAAkC,2BAAlC;;AAEA,OAAO,eAAeC,GAAf,CAAmBC,QAAnB,EAA6B;AAClC;;AAEA,MAAIC,cAAc,GAAG,EAArB;;AAEA,MAAIC,QAAQ,GAAGN,IAAI,CAACO,QAAL,CAAcH,QAAd,CAAf;AACA,MAAII,OAAO,GAAG,CAAE,cAAF,EAAkB,iBAAlB,CAAd;;AAEA,MAAIA,OAAO,CAACC,MAAR,CAAe,CAACC,OAAD,EAAUF,OAAV,KAAsBE,OAAO,GAAGA,OAAH,GAAaX,KAAK,CAACO,QAAD,EAAWE,OAAX,EAAoB,EAAE,OAAO,IAAT,EAApB,CAA9D,EAAoG,KAApG,CAAJ,EAAgH;;AAE9G,QAAIG,aAAa,GAAG,IAApB;AACAA,IAAAA,aAAa,GAAGb,KAAK,CAACc,KAAN,CAAY,MAAMf,UAAU,CAACgB,QAAX,CAAoBT,QAApB,EAA8B,EAAE,YAAY,OAAd,EAA9B,CAAlB,CAAhB;AACAO,IAAAA,aAAa,GAAGL,QAAQ,KAAK,cAAb,GAA+BK,aAAa,CAACG,GAAd,IAAqB,EAApD,GAA0DH,aAA1E;;AAEA,QAAII,OAAO,GAAGd,KAAK,CAACe,KAAN,CAAYL,aAAZ,EAA2B,cAA3B,CAAd;;AAEAN,IAAAA,cAAc,GAAGU,OAAO,CAACE,GAAR,CAAaC,UAAD,IAAgBhB,iBAAiB,CAACgB,UAAD,CAA7C,CAAjB;;AAED;;AAED,SAAOb,cAAP;;AAED","sourcesContent":["import FileSystem from 'fs-extra'\nimport JSON5 from 'json5'\nimport Match from 'minimatch'\nimport Path from 'path'\nimport Query from 'jsonpath'\n\nimport { GetDependencyName } from '../get-dependency-name.js'\n\nexport async function Ava(filePath) {\n  // console.log(`Ava('${Path.relative('', filePath)}') { ... }`)\n\n  let fileDependency = []\n\n  let fileName = Path.basename(filePath)\n  let pattern = [ 'package.json', 'ava.config.json' ]\n\n  if (pattern.reduce((isMatch, pattern) => isMatch ? isMatch : Match(fileName, pattern, { 'dot': true }), false)) {\n\n    let configuration = null\n    configuration = JSON5.parse(await FileSystem.readFile(filePath, { 'encoding': 'utf-8' }))\n    configuration = fileName === 'package.json' ? (configuration.ava || {}) : configuration\n\n    let require = Query.query(configuration, '$.require[*]')\n\n    fileDependency = require.map((dependency) => GetDependencyName(dependency))\n\n  }\n\n  return fileDependency\n\n}"],"file":"ava.js"}