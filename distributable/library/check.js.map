{"version":3,"sources":["../../source/library/check.js"],"names":["BaseCheck","BaseTransform","Is","Merge","Path","Ava","Babel","Browser","Parcel","Pug","FileParseError","FolderParseError","transform","Transform","Process","process","Check","userPath","cwd","userOption","Promise","resolve","reject","defaultOption","parser","es7","default","special","bin","eslint","map","item","emptyObject","package","path","option","unused","invalidFiles","invalidDirs","missing","dependencies","devDependencies","using","Object","entries","error"],"mappings":"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","sourcesContent":["import BaseCheck from 'depcheck'\nimport BaseTransform from 'node-json-transform'\nimport Is from '@pwn/is'\nimport Merge from 'deepmerge'\nimport Path from 'path'\n\nimport { Ava } from './special/ava.js'\nimport { Babel } from './special/babel.js'\nimport { Browser } from './parser/browser.js'\nimport { Parcel } from './parser/parcel.js'\nimport { Pug } from './parser/pug.js'\n\nimport { FileParseError } from './error/file-parse-error.js'\nimport { FolderParseError } from './error/folder-parse-error.js'\n\nconst { transform: Transform } = BaseTransform\nconst Process = process\n\nexport function Check(userPath = Process.cwd(), userOption = {}) {\n\n  return new Promise((resolve, reject) => {\n\n    try {\n\n      let defaultOption = {\n        // 'ignoreMatch': [\n        //   'buffer',\n        //   'events',\n        //   'util'\n        // ],\n        'parser': {\n          '**/*.cjs': BaseCheck.parser.es7.default,\n          '**/*.js': BaseCheck.parser.es7.default,\n          '**/*.pug': Pug,\n          '**/package.json': [ Browser, Parcel ]\n        },\n        'special': [\n          BaseCheck.special.bin,\n          BaseCheck.special.eslint,\n          Ava,\n          Babel\n        ]\n      }\n  \n      let map = {\n        'item': {\n          'ignoreMatches': 'ignoreMatch',\n          'ignorePatterns': 'ignorePattern',\n          'package': {\n            'dependencies': 'package.dependency',\n            'devDependencies': 'package.devDependency',\n            'peerDependencies': 'package.peerDependency',\n            'optionalDependencies': 'package.optionalDependency'\n          },\n          'parsers': 'parser',\n          'specials': 'special'\n        },\n        'each': (item) => {\n          if (Is.emptyObject(item.package)) {\n            delete item.package\n          }\n          return item\n        }\n      }\n  \n      let path = Path.resolve(userPath)\n      let option = Transform(Merge(defaultOption, userOption), map)\n\n      BaseCheck(path, option, (unused) => {\n        \n        if (Is.emptyObject(unused.invalidFiles) && \n            Is.emptyObject(unused.invalidDirs)) {\n  \n          resolve({\n            'missing': unused.missing,\n            'unused': [ ...unused.dependencies, ...unused.devDependencies ],\n            'used': unused.using\n          })\n  \n        } else {\n  \n          if (Is.emptyObject(unused.invalidDirs)) {\n\n            let item = Object.entries(unused.invalidFiles)\n\n            let path = item[0][0]\n            let error = item[0][1]\n\n            reject(new FileParseError(path, error))\n\n          } else {\n\n            let item = Object.entries(unused.invalidDirs)\n\n            let path = item[0][0]\n            let error = item[0][1]\n\n            reject(new FolderParseError(path, error))\n\n          }\n  \n        }\n  \n      })\n\n    } catch(error) {\n      reject(error)\n    }\n\n  })\n\n}"],"file":"check.js"}