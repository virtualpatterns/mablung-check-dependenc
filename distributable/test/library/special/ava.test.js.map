{"version":3,"sources":["../../../../source/test/library/special/ava.test.js"],"names":["createRequire","CreateRequire","Test","Ava","Require","import","meta","url","test","deepEqual","resolve"],"mappings":"AAAA,SAASA,aAAa,IAAIC,aAA1B,QAA+C,QAA/C;AACA,OAAOC,IAAP,MAAiB,KAAjB;;AAEA,SAASC,GAAT,QAAoB,iCAApB;;AAEA,MAAMC,OAAO,GAAGH,aAAa,CAACI,MAAM,CAACC,IAAP,CAAYC,GAAb,CAA7B;;AAEAL,IAAI,CAAC,8BAAD,EAAiC,MAAOM,IAAP,IAAgB;AACnDA,EAAAA,IAAI,CAACC,SAAL,CAAe,MAAMN,GAAG,CAACC,OAAO,CAACM,OAAR,CAAgB,oCAAhB,CAAD,CAAxB,EAAiF,EAAjF;AACD,CAFG,CAAJ;;AAIAR,IAAI,CAAC,kCAAD,EAAqC,MAAOM,IAAP,IAAgB;AACvDA,EAAAA,IAAI,CAACC,SAAL,CAAe,MAAMN,GAAG,CAACC,OAAO,CAACM,OAAR,CAAgB,wCAAhB,CAAD,CAAxB,EAAqF,EAArF;AACD,CAFG,CAAJ;;AAIAR,IAAI,CAAC,qCAAD,EAAwC,MAAOM,IAAP,IAAgB;AAC1DA,EAAAA,IAAI,CAACC,SAAL,CAAe,MAAMN,GAAG,CAACC,OAAO,CAACM,OAAR,CAAgB,2CAAhB,CAAD,CAAxB,EAAwF,EAAxF;AACD,CAFG,CAAJ;;AAIAR,IAAI,CAAC,+BAAD,EAAkC,MAAOM,IAAP,IAAgB;AACpDA,EAAAA,IAAI,CAACC,SAAL,CAAe,MAAMN,GAAG,CAACC,OAAO,CAACM,OAAR,CAAgB,qCAAhB,CAAD,CAAxB,EAAkF,CAAE,6CAAF,EAAiD,qCAAjD,CAAlF;AACD,CAFG,CAAJ;;AAIAR,IAAI,CAAC,kCAAD,EAAqC,MAAOM,IAAP,IAAgB;AACvDA,EAAAA,IAAI,CAACC,SAAL,CAAe,MAAMN,GAAG,CAACC,OAAO,CAACM,OAAR,CAAgB,wCAAhB,CAAD,CAAxB,EAAqF,CAAE,6CAAF,EAAiD,qCAAjD,CAArF;AACD,CAFG,CAAJ","sourcesContent":["import { createRequire as CreateRequire } from 'module'\nimport Test from 'ava'\n\nimport { Ava } from '../../../library/special/ava.js'\n\nconst Require = CreateRequire(import.meta.url)\n\nTest('Ava(\\'no-ava/package.json\\')', async (test) => {\n  test.deepEqual(await Ava(Require.resolve('./resource/ava/no-ava/package.json')), [])\n})\n\nTest('Ava(\\'no-require/package.json\\')', async (test) => {\n  test.deepEqual(await Ava(Require.resolve('./resource/ava/no-require/package.json')), [])\n})\n\nTest('Ava(\\'no-require/ava.config.json\\')', async (test) => {\n  test.deepEqual(await Ava(Require.resolve('./resource/ava/no-require/ava.config.json')), [])\n})\n\nTest('Ava(\\'require/package.json\\')', async (test) => {\n  test.deepEqual(await Ava(Require.resolve('./resource/ava/require/package.json')), [ '@virtualpatterns/mablung-source-map-support', '@virtualpatterns/mablung-dependency' ])\n})\n\nTest('Ava(\\'require/ava.config.json\\')', async (test) => {\n  test.deepEqual(await Ava(Require.resolve('./resource/ava/require/ava.config.json')), [ '@virtualpatterns/mablung-source-map-support', '@virtualpatterns/mablung-dependency' ])\n})\n"],"file":"ava.test.js"}