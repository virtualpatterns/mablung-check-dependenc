{"version":3,"sources":["../../../../source/test/library/special/babel-environment-no-plugins-or-presets.test.js"],"names":["createRequire","CreateRequire","Path","Test","URL","Babel","FilePath","fileURLToPath","import","meta","url","FolderPath","dirname","Require","ResourcePath","normalize","test","deepEqual","resolve"],"mappings":"AAAA,SAASA,aAAa,IAAIC,aAA1B,QAA+C,QAA/C;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,IAAP,MAAiB,KAAjB;AACA,OAAOC,GAAP,MAAgB,KAAhB;;AAEA,SAASC,KAAT,QAAsB,mCAAtB;;AAEA,MAAMC,QAAQ,GAAGF,GAAG,CAACG,aAAJ,CAAkBC,MAAM,CAACC,IAAP,CAAYC,GAA9B,CAAjB;AACA,MAAMC,UAAU,GAAGT,IAAI,CAACU,OAAL,CAAaN,QAAb,CAAnB;;AAEA,MAAMO,OAAO,GAAGZ,aAAa,CAACO,MAAM,CAACC,IAAP,CAAYC,GAAb,CAA7B;;AAEA;AACA;AACA,MAAMI,YAAY,GAAGZ,IAAI,CAACa,SAAL,CAAgB,GAAEJ,UAAW,2FAA7B,CAArB;;AAEAR,IAAI,CAAC,8BAAD,EAAiC,MAAOa,IAAP,IAAgB;AACnDA,EAAAA,IAAI,CAACC,SAAL,CAAe,MAAMZ,KAAK,CAACQ,OAAO,CAACK,OAAR,CAAiB,GAAEJ,YAAa,gBAAhC,CAAD,EAAmD,EAAnD,CAA1B,EAAkF,EAAlF;AACD,CAFG,CAAJ;;AAIAX,IAAI,CAAC,kCAAD,EAAqC,MAAOa,IAAP,IAAgB;AACvDA,EAAAA,IAAI,CAACC,SAAL,CAAe,MAAMZ,KAAK,CAACQ,OAAO,CAACK,OAAR,CAAiB,GAAEJ,YAAa,oBAAhC,CAAD,EAAuD,EAAvD,CAA1B,EAAsF,EAAtF;AACD,CAFG,CAAJ;;AAIAX,IAAI,CAAC,6BAAD,EAAgC,MAAOa,IAAP,IAAgB;AAClDA,EAAAA,IAAI,CAACC,SAAL,CAAe,MAAMZ,KAAK,CAACQ,OAAO,CAACK,OAAR,CAAiB,GAAEJ,YAAa,eAAhC,CAAD,EAAkD,EAAlD,CAA1B,EAAiF,EAAjF;AACD,CAFG,CAAJ","sourcesContent":["import { createRequire as CreateRequire } from 'module'\nimport Path from 'path'\nimport Test from 'ava'\nimport URL from 'url'\n\nimport { Babel } from '../../../library/special/babel.js'\n\nconst FilePath = URL.fileURLToPath(import.meta.url)\nconst FolderPath = Path.dirname(FilePath)\n\nconst Require = CreateRequire(import.meta.url)\n\n// the resources in source are used because \n// babel doesn't copy dot files (e.g. .babelrc.json)\nconst ResourcePath = Path.normalize(`${FolderPath}/../../../../source/test/library/special/resource/babel/environment-no-plugins-or-presets`)\n\nTest('Babel(\\'.babelrc.json\\', [])', async (test) => {\n  test.deepEqual(await Babel(Require.resolve(`${ResourcePath}/.babelrc.json`), []), [])\n})\n\nTest('Babel(\\'babel.config.json\\', [])', async (test) => {\n  test.deepEqual(await Babel(Require.resolve(`${ResourcePath}/babel.config.json`), []), [])\n})\n\nTest('Babel(\\'package.json\\', [])', async (test) => {\n  test.deepEqual(await Babel(Require.resolve(`${ResourcePath}/package.json`), []), [])\n})\n"],"file":"babel-environment-no-plugins-or-presets.test.js"}