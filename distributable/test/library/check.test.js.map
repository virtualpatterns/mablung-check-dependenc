{"version":3,"sources":["../../../source/test/library/check.test.js"],"names":["Path","Test","URL","Check","FileParseError","FilePath","fileURLToPath","import","meta","url","FolderPath","dirname","ResourcePath","normalize","test","deepEqual","throwsAsync"],"mappings":"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","sourcesContent":["import Path from 'path'\nimport Test from 'ava'\nimport URL from 'url'\n\nimport { Check, FileParseError } from '../../index.js'\n\nconst FilePath = URL.fileURLToPath(import.meta.url)\nconst FolderPath = Path.dirname(FilePath)\n\n// the resources in source are used because \n// babel doesn't copy dot files (e.g. .babelrc.json)\nconst ResourcePath = Path.normalize(`${FolderPath}/../../../source/test/library/resource`)\n\nTest('Check(\\'unused/dependency\\')', async (test) => {\n  test.deepEqual(await Check(`${ResourcePath}/unused/dependency`), { \n    'missing': {}, \n    'unused': [ '@virtualpatterns/mablung-dependency' ], \n    'used': {} \n  })\n})\n\nTest('Check(\\'unused/development-dependency\\')', async (test) => {\n  test.deepEqual(await Check(`${ResourcePath}/unused/development-dependency`), { \n    'missing': {}, \n    'unused': [ '@virtualpatterns/mablung-development-dependency' ], \n    'used': {} \n  })\n})\n\nTest('Check(\\'missing/dependency\\')', async (test) => {\n  test.deepEqual(await Check(`${ResourcePath}/missing/dependency`), { \n    'missing': { \n      '@virtualpatterns/mablung-dependency': [ `${ResourcePath}/missing/dependency/dependency.js` ] \n    }, \n    'unused': [],\n    'used': { \n      '@virtualpatterns/mablung-dependency': [ `${ResourcePath}/missing/dependency/dependency.js` ] \n    } \n  })\n})\n\nTest('Check(\\'missing/ava\\')', async (test) => {\n  test.deepEqual(await Check(`${ResourcePath}/missing/ava`), { \n    'missing': { \n      '@virtualpatterns/mablung-ava': [ `${ResourcePath}/missing/ava/package.json` ] \n    }, \n    'unused': [],\n    'used': { \n      '@virtualpatterns/mablung-ava': [ `${ResourcePath}/missing/ava/package.json` ] \n    }\n  })\n})\n\nTest('Check(\\'missing/ava.config.json\\')', async (test) => {\n  test.deepEqual(await Check(`${ResourcePath}/missing/ava.config.json`), { \n    'missing': { \n      '@virtualpatterns/mablung-ava': [ `${ResourcePath}/missing/ava.config.json/ava.config.json` ] \n    }, \n    'unused': [],\n    'used': { \n      '@virtualpatterns/mablung-ava': [ `${ResourcePath}/missing/ava.config.json/ava.config.json` ] \n    }\n  })\n})\n\nTest('Check(\\'missing/babel-plugin\\')', async (test) => {\n  test.deepEqual(await Check(`${ResourcePath}/missing/babel-plugin`), { \n    'missing': { \n      '@virtualpatterns/mablung-babel-plugin': [ `${ResourcePath}/missing/babel-plugin/package.json` ] \n    }, \n    'unused': [],\n    'used': { \n      '@virtualpatterns/mablung-babel-plugin': [ `${ResourcePath}/missing/babel-plugin/package.json` ] \n    }\n  })\n})\n\nTest('Check(\\'missing/babel-preset\\')', async (test) => {\n  test.deepEqual(await Check(`${ResourcePath}/missing/babel-preset`), { \n    'missing': { \n      '@virtualpatterns/mablung-babel-preset': [ `${ResourcePath}/missing/babel-preset/package.json` ] \n    }, \n    'unused': [],\n    'used': { \n      '@virtualpatterns/mablung-babel-preset': [ `${ResourcePath}/missing/babel-preset/package.json` ] \n    }\n  })\n})\n\nTest('Check(\\'missing/babel-environment-plugin\\')', async (test) => {\n  test.deepEqual(await Check(`${ResourcePath}/missing/babel-environment-plugin`), { \n    'missing': { \n      '@virtualpatterns/mablung-babel-environment-plugin': [ `${ResourcePath}/missing/babel-environment-plugin/package.json` ] \n    }, \n    'unused': [],\n    'used': { \n      '@virtualpatterns/mablung-babel-environment-plugin': [ `${ResourcePath}/missing/babel-environment-plugin/package.json` ] \n    }\n  })\n})\n\nTest('Check(\\'missing/babel-environment-preset\\')', async (test) => {\n  test.deepEqual(await Check(`${ResourcePath}/missing/babel-environment-preset`), { \n    'missing': { \n      '@virtualpatterns/mablung-babel-environment-preset': [ `${ResourcePath}/missing/babel-environment-preset/package.json` ] \n    }, \n    'unused': [],\n    'used': { \n      '@virtualpatterns/mablung-babel-environment-preset': [ `${ResourcePath}/missing/babel-environment-preset/package.json` ] \n    }\n  })\n})\n\nTest('Check(\\'missing/babel.config.json-plugin\\')', async (test) => {\n  test.deepEqual(await Check(`${ResourcePath}/missing/babel.config.json-plugin`), { \n    'missing': { \n      '@virtualpatterns/mablung-babel-plugin': [ `${ResourcePath}/missing/babel.config.json-plugin/babel.config.json` ] \n    }, \n    'unused': [],\n    'used': { \n      '@virtualpatterns/mablung-babel-plugin': [ `${ResourcePath}/missing/babel.config.json-plugin/babel.config.json` ] \n    }\n  })\n})\n\nTest('Check(\\'missing/babel.config.json-preset\\')', async (test) => {\n  test.deepEqual(await Check(`${ResourcePath}/missing/babel.config.json-preset`), { \n    'missing': { \n      '@virtualpatterns/mablung-babel-preset': [ `${ResourcePath}/missing/babel.config.json-preset/babel.config.json` ] \n    }, \n    'unused': [],\n    'used': { \n      '@virtualpatterns/mablung-babel-preset': [ `${ResourcePath}/missing/babel.config.json-preset/babel.config.json` ] \n    }\n  })\n})\n\nTest('Check(\\'missing/babel.config.json-environment-plugin\\')', async (test) => {\n  test.deepEqual(await Check(`${ResourcePath}/missing/babel.config.json-environment-plugin`), { \n    'missing': { \n      '@virtualpatterns/mablung-babel-environment-plugin': [ `${ResourcePath}/missing/babel.config.json-environment-plugin/babel.config.json` ] \n    }, \n    'unused': [],\n    'used': { \n      '@virtualpatterns/mablung-babel-environment-plugin': [ `${ResourcePath}/missing/babel.config.json-environment-plugin/babel.config.json` ] \n    }\n  })\n})\n\nTest('Check(\\'missing/babel.config.json-environment-preset\\')', async (test) => {\n  test.deepEqual(await Check(`${ResourcePath}/missing/babel.config.json-environment-preset`), { \n    'missing': { \n      '@virtualpatterns/mablung-babel-environment-preset': [ `${ResourcePath}/missing/babel.config.json-environment-preset/babel.config.json` ] \n    }, \n    'unused': [],\n    'used': { \n      '@virtualpatterns/mablung-babel-environment-preset': [ `${ResourcePath}/missing/babel.config.json-environment-preset/babel.config.json` ] \n    }\n  })\n})\n\nTest('Check(\\'missing/babelrc.json-plugin\\')', async (test) => {\n  test.deepEqual(await Check(`${ResourcePath}/missing/babelrc.json-plugin`), { \n    'missing': { \n      '@virtualpatterns/mablung-babel-plugin': [ `${ResourcePath}/missing/babelrc.json-plugin/.babelrc.json` ] \n    }, \n    'unused': [],\n    'used': { \n      '@virtualpatterns/mablung-babel-plugin': [ `${ResourcePath}/missing/babelrc.json-plugin/.babelrc.json` ] \n    }\n  })\n})\n\nTest('Check(\\'missing/babelrc.json-preset\\')', async (test) => {\n  test.deepEqual(await Check(`${ResourcePath}/missing/babelrc.json-preset`), {\n    'missing': { \n      '@virtualpatterns/mablung-babel-preset': [ `${ResourcePath}/missing/babelrc.json-preset/.babelrc.json` ] \n    }, \n    'unused': [],\n    'used': { \n      '@virtualpatterns/mablung-babel-preset': [ `${ResourcePath}/missing/babelrc.json-preset/.babelrc.json` ] \n    }\n  })\n})\n\nTest('Check(\\'missing/babelrc.json-environment-plugin\\')', async (test) => {\n  test.deepEqual(await Check(`${ResourcePath}/missing/babelrc.json-environment-plugin`), { \n    'missing': { \n      '@virtualpatterns/mablung-babel-environment-plugin': [ `${ResourcePath}/missing/babelrc.json-environment-plugin/.babelrc.json` ] \n    }, \n    'unused': [], \n    'used': { \n      '@virtualpatterns/mablung-babel-environment-plugin': [ `${ResourcePath}/missing/babelrc.json-environment-plugin/.babelrc.json` ] \n    }\n  })\n})\n\nTest('Check(\\'missing/babelrc.json-environment-preset\\')', async (test) => {\n  test.deepEqual(await Check(`${ResourcePath}/missing/babelrc.json-environment-preset`), { \n    'missing': { \n      '@virtualpatterns/mablung-babel-environment-preset': [ `${ResourcePath}/missing/babelrc.json-environment-preset/.babelrc.json` ] \n    }, \n    'unused': [],\n    'used': { \n      '@virtualpatterns/mablung-babel-environment-preset': [ `${ResourcePath}/missing/babelrc.json-environment-preset/.babelrc.json` ] \n    }\n  })\n})\n\nTest('Check(\\'ignore-match\\', { ignoreMatch: [ ... ] })', async (test) => {\n  test.deepEqual(await Check(`${ResourcePath}/ignore-match`, { 'ignoreMatch': [ '@virtualpatterns/mablung-dependency' ] }), { \n    'missing': {}, \n    'unused': [],\n    'used': {}\n  })\n})\n\nTest('Check(\\'ignore-pattern\\', { ignorePattern: [ ... ] })', async (test) => {\n  test.deepEqual(await Check(`${ResourcePath}/ignore-pattern`, { 'ignorePattern': [ 'ignore-pattern.js' ] }), { \n    'missing': {}, \n    'unused': [ '@virtualpatterns/mablung-dependency' ],\n    'used': {}\n  })\n})\n\nTest('Check(\\'error/babelrc.json\\') throws FileParseError', async (test) => {\n  await test.throwsAsync(Check(`${ResourcePath}/error/babelrc.json`), { 'instanceOf': FileParseError })\n})\n"],"file":"check.test.js"}