{"version":3,"sources":["../../../source/test/library/check.test.js"],"names":["Path","Test","URL","Check","FileParseError","FilePath","fileURLToPath","import","meta","url","FolderPath","dirname","ResourcePath","normalize","test","deepEqual","throwsAsync"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,IAAP,MAAiB,KAAjB;AACA,OAAOC,GAAP,MAAgB,KAAhB;;AAEA,SAASC,KAAT,EAAgBC,cAAhB,QAAsC,gBAAtC;;AAEA,MAAMC,QAAQ,GAAGH,GAAG,CAACI,aAAJ,CAAkBC,MAAM,CAACC,IAAP,CAAYC,GAA9B,CAAjB;AACA,MAAMC,UAAU,GAAGV,IAAI,CAACW,OAAL,CAAaN,QAAb,CAAnB;;AAEA;AACA;AACA,MAAMO,YAAY,GAAGZ,IAAI,CAACa,SAAL,CAAgB,GAAEH,UAAW,wCAA7B,CAArB;;AAEAT,IAAI,CAAC,mDAAD,EAAsD,MAAOa,IAAP,IAAgB;AACxEA,EAAAA,IAAI,CAACC,SAAL,CAAe,MAAMZ,KAAK,CAAE,GAAES,YAAa,eAAjB,EAAiC,EAAE,eAAe,CAAE,qCAAF,CAAjB,EAAjC,CAA1B,EAA0H;AACxH,eAAW,EAD6G;AAExH,cAAU,EAF8G;AAGxH,YAAQ,EAHgH,EAA1H;;AAKD,CANG,CAAJ;;AAQAX,IAAI,CAAC,uDAAD,EAA0D,MAAOa,IAAP,IAAgB;AAC5EA,EAAAA,IAAI,CAACC,SAAL,CAAe,MAAMZ,KAAK,CAAE,GAAES,YAAa,iBAAjB,EAAmC,EAAE,iBAAiB,CAAE,mBAAF,CAAnB,EAAnC,CAA1B,EAA4G;AAC1G,eAAW,EAD+F;AAE1G,cAAU,CAAE,qCAAF,CAFgG;AAG1G,YAAQ,EAHkG,EAA5G;;AAKD,CANG,CAAJ;;AAQAX,IAAI,CAAC,qDAAD,EAAwD,MAAOa,IAAP,IAAgB;AAC1E,QAAMA,IAAI,CAACE,WAAL,CAAiBb,KAAK,CAAE,GAAES,YAAa,qBAAjB,CAAtB,EAA8D,EAAE,cAAcR,cAAhB,EAA9D,CAAN;AACD,CAFG,CAAJ","sourcesContent":["import Path from 'path'\nimport Test from 'ava'\nimport URL from 'url'\n\nimport { Check, FileParseError } from '../../index.js'\n\nconst FilePath = URL.fileURLToPath(import.meta.url)\nconst FolderPath = Path.dirname(FilePath)\n\n// the resources in source are used because \n// babel doesn't copy dot files (e.g. .babelrc.json)\nconst ResourcePath = Path.normalize(`${FolderPath}/../../../source/test/library/resource`)\n\nTest('Check(\\'ignore-match\\', { ignoreMatch: [ ... ] })', async (test) => {\n  test.deepEqual(await Check(`${ResourcePath}/ignore-match`, { 'ignoreMatch': [ '@virtualpatterns/mablung-dependency' ] }), { \n    'missing': {}, \n    'unused': [],\n    'used': {}\n  })\n})\n\nTest('Check(\\'ignore-pattern\\', { ignorePattern: [ ... ] })', async (test) => {\n  test.deepEqual(await Check(`${ResourcePath}/ignore-pattern`, { 'ignorePattern': [ 'ignore-pattern.js' ] }), { \n    'missing': {}, \n    'unused': [ '@virtualpatterns/mablung-dependency' ],\n    'used': {}\n  })\n})\n\nTest('Check(\\'error/babelrc.json\\') throws FileParseError', async (test) => {\n  await test.throwsAsync(Check(`${ResourcePath}/error/babelrc.json`), { 'instanceOf': FileParseError })\n})\n"],"file":"check.test.js"}