{"version":3,"sources":["../../../source/test/command/check-dependency.test.js"],"names":["Path","Test","URL","CheckDependencyProcess","FilePath","fileURLToPath","import","meta","url","FolderPath","dirname","ResourcePath","normalize","serial","test","process","is","whenExit"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,IAAP,MAAiB,KAAjB;AACA,OAAOC,GAAP,MAAgB,KAAhB;;AAEA,SAASC,sBAAT,QAAuC,+BAAvC;;AAEA,MAAMC,QAAQ,GAAGF,GAAG,CAACG,aAAJ,CAAkBC,MAAM,CAACC,IAAP,CAAYC,GAA9B,CAAjB;AACA,MAAMC,UAAU,GAAGT,IAAI,CAACU,OAAL,CAAaN,QAAb,CAAnB;;AAEA;AACA;AACA;AACA,MAAMO,YAAY,GAAGX,IAAI,CAACY,SAAL,CAAgB,GAAEH,UAAW,WAA7B,CAArB;;AAEAR,IAAI,CAACY,MAAL,CAAY,wDAAZ,EAAsE,MAAOC,IAAP,IAAgB;AACpF,MAAIC,OAAO,GAAG,IAAIZ,sBAAJ,CAA2B,EAAE,kBAAmB,GAAEQ,YAAa,WAApC,EAAgD,iBAAiB,IAAjE,EAA3B,CAAd;AACAG,EAAAA,IAAI,CAACE,EAAL,CAAQ,MAAMD,OAAO,CAACE,QAAR,EAAd,EAAkC,CAAlC;AACD,CAHD;;AAKAhB,IAAI,CAACY,MAAL,CAAY,sDAAZ,EAAoE,MAAOC,IAAP,IAAgB;AAClF,MAAIC,OAAO,GAAG,IAAIZ,sBAAJ,CAA2B,EAAE,kBAAmB,GAAEQ,YAAa,SAApC,EAA8C,iBAAiB,IAA/D,EAA3B,CAAd;AACAG,EAAAA,IAAI,CAACE,EAAL,CAAQ,MAAMD,OAAO,CAACE,QAAR,EAAd,EAAkC,CAAlC;AACD,CAHD;;AAKAhB,IAAI,CAACY,MAAL,CAAY,qGAAZ,EAAmH,MAAOC,IAAP,IAAgB;AACjI,MAAIC,OAAO,GAAG,IAAIZ,sBAAJ,CAA2B,EAAE,kBAAmB,GAAEQ,YAAa,SAApC,EAA8C,wBAAyB,GAAEA,YAAa,4BAAtF,EAAmH,iBAAiB,IAApI,EAA3B,CAAd;AACAG,EAAAA,IAAI,CAACE,EAAL,CAAQ,MAAMD,OAAO,CAACE,QAAR,EAAd,EAAkC,CAAlC;AACD,CAHD","sourcesContent":["import Path from 'path'\nimport Test from 'ava'\nimport URL from 'url'\n\nimport { CheckDependencyProcess } from './check-dependency-process.js'\n\nconst FilePath = URL.fileURLToPath(import.meta.url)\nconst FolderPath = Path.dirname(FilePath)\n\n// the resources in distributable are used because \n// and these tests don't rely on babel to copy \n// dot files (e.g. .babelrc.json)\nconst ResourcePath = Path.normalize(`${FolderPath}/resource`)\n\nTest.serial('check-dependency --project-path no-issue --report-used', async (test) => {\n  let process = new CheckDependencyProcess({ '--project-path': `${ResourcePath}/no-issue`, '--report-used': true })\n  test.is(await process.whenExit(), 0)\n})\n\nTest.serial('check-dependency --project-path unused --report-used', async (test) => {\n  let process = new CheckDependencyProcess({ '--project-path': `${ResourcePath}/unused`, '--report-used': true })\n  test.is(await process.whenExit(), 1)\n})\n\nTest.serial('check-dependency --project-path unused --configuration-path unused/configuration.json --report-used', async (test) => {\n  let process = new CheckDependencyProcess({ '--project-path': `${ResourcePath}/unused`, '--configuration-path': `${ResourcePath}/unused/configuration.json`, '--report-used': true })\n  test.is(await process.whenExit(), 0)\n})\n"],"file":"check-dependency.test.js"}