{"version":3,"sources":["../../source/command/check-dependency.js"],"names":["Command","FileSystem","Is","JSON5","Path","Check","Package","parse","readFileSync","Process","process","version","option","cwd","action","path","projectPath","configuration","pathExists","configurationPath","readFile","dependency","unused","length","console","log","repeat","map","join","exitCode","not","emptyObject","missing","missingDependency","Object","entries","forEach","relative","error","argv"],"mappings":"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","sourcesContent":["#!/usr/bin/env node\n\nimport '@virtualpatterns/mablung-source-map-support/install'\nimport Command from 'commander'\nimport FileSystem from 'fs-extra'\nimport Is from '@pwn/is'\nimport JSON5 from 'json5'\nimport Path from 'path'\n\nimport { Check } from '../library/check.js'\n\nconst Package = JSON5.parse(FileSystem.readFileSync('package.json'), { 'encoding': 'utf-8' })\nconst Process = process\n\nCommand\n  .version(Package.version)\n  .option('--project-path <path>', 'Path of the project to check', Process.cwd())\n  .option('--configuration-path <path>', 'Path ...', `${Process.cwd()}/check-dependency.json`)\n  .action(async (option) => {\n\n    try {\n\n      let path = option.projectPath\n      let configuration = null\n\n      if (FileSystem.pathExists(option.configurationPath)) {\n        configuration = JSON5.parse(await FileSystem.readFile(option.configurationPath, { 'encoding': 'utf-8' }))\n      } else {\n        configuration = {}\n      }\n\n      let dependency = await Check(path, configuration)\n      \n      if (dependency.unused.length > 0) {\n\n        console.log('-'.repeat(80))\n        console.log('Unused dependencies')\n        console.log('-'.repeat(80))\n        console.log(dependency.unused.map((dependency) => `${dependency}`).join('\\n'))\n        console.log()\n\n        process.exitCode = 1\n\n      }\n\n      if (Is.not.emptyObject(dependency.missing)) {\n\n        let missingDependency = Object.entries(dependency.missing)\n\n        console.log('-'.repeat(80))\n        console.log('Missing dependencies')\n        console.log('-'.repeat(80))\n\n        missingDependency.forEach(([dependency, path]) => {\n          console.log(`'${dependency}' used in ...`)\n          console.log(path.map((path) => `  ${Path.relative('', path)}`).join('\\n'))\n        })\n\n        console.log()\n\n        process.exitCode = 1\n\n      }\n\n      if (dependency.unused.length <= 0 &&\n          Is.emptyObject(dependency.missing)) {\n        \n        console.log('-'.repeat(80))\n        console.log('There are no dependency issues.')\n        console.log('-'.repeat(80))\n\n        process.exitCode = 0\n\n      }\n      \n    } catch (error) {\n      console.error(error)\n      process.exitCode = 2\n    }\n\n  })\n\nCommand.parse(Process.argv)\n"],"file":"check-dependency.js"}